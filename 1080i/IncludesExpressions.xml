<?xml version="1.0" encoding="utf-8"?>
<includes>
	<!-- Tags -->
	<expression name="NetflixHomeIsVisible">[Window.IsActive(Home) + !Window.IsActive(movieinformation) + String.Contains(Skin.String(HomeLayout),netflix)]</expression>
	
	
	<!-- avoid online lookups if offline , 
	!String.IsEmpty(Network.IPAddress)
	!String.EndsWith(Network.LinkState,$LOCALIZE[15208]] not connected
	-->
	<expression name="IsOfflineMode">[String.EndsWith(Network.LinkState,$LOCALIZE[15208]) + String.IsEmpty(Network.IPAddress)]</expression>
	
	<!-- Backgroundbuilding [Window.IsActive(movieinformation) + Skin.HasSetting(UseNetflixInfoDialog)] | -->
			<!-- NetflixLayout -->
			<expression name="IsNetflixLayout">
				[[Window.IsActive(Home) + !Window.IsActive(movieinformation) + String.Contains(Skin.String(HomeLayout),netflix)] | 
				 [Window.IsActive(movieinformation) + Skin.HasSetting(UseNetflixInfoDialog)] | 
				  Window.IsActive(3017) | Window.IsActive(3018) | 
				 Control.IsVisible(523) | 
				 Control.IsVisible(525) | 
				 Control.IsVisible(529) | 
				[Control.IsVisible(526) + Skin.HasSetting(View526_DisableFanArt)] |
				[Control.IsVisible(527) + Skin.HasSetting(View527_DisableFanArt)]]
			</expression>
	
	<!-- Home -->
	<!-- studio or Ratings footer-->
	<expression name="UseStudio_or_RatingFoo">[
		Skin.HasSetting(StudioInFooter) | 
		Skin.HasSetting(show_imdb_RatingInFooter) | 
		Skin.HasSetting(show_themoviedb_RatingInFooter) | 
		Skin.HasSetting(show_tvdb_RatingInFooter) | 
		Skin.HasSetting(show_imdbtop250_RatingInFooter) |
		Skin.HasSetting(show_metacritic_RatingInFooter) |
		Skin.HasSetting(show_tomatometerallaudience_RatingInFooter) |
		Skin.HasSetting(show_tomatometerallcritics_RatingInFooter)]
	</expression>
	
	<!-- Artwork -->
	<expression name="NoClearlogo">
		String.IsEmpty(ListItem.Art(tvshow.clearlogo)) +
		String.IsEmpty(ListItem.Art(artist.clearlogo)) +
		String.IsEmpty(ListItem.Art(albumartist.clearlogo)) +
		String.IsEmpty(ListItem.Art(clearlogo)) + 
		String.IsEmpty(Container.ListItem.Property(ListItem.Art(clearlogo))) +
		String.IsEmpty(Window(home).Property(SkinHelper.ListItem.ClearLogo)) +
		String.IsEmpty(Window(home).Property(SkinHelper.ListItem.Art.ClearLogo))
	</expression>
	
	<!-- Playing -->
	<expression name="PlayerHasVideo">[Player.HasVideo | Player.HasGame]</expression>
	
	<!-- Content -->
	<expression name="IsTVShow">String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.Property(DBTYPE),tvshow) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,tvshow)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),tvshow)</expression>
	<expression name="IsEpisode">String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,episode)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),episode)</expression>
	<expression name="IsSeason">Container.Content(seasons) | String.IsEqual(ListItem.DBTYPE,season)</expression>
	<expression name="IsMovie">String.IsEqual(ListItem.DBTYPE,movie) | String.IsEqual(ListItem.Property(DBTYPE),movie) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,movie)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),movie)</expression>
	<expression name="IsArtist">String.IsEqual(ListItem.DBTYPE,artist) | String.IsEqual(ListItem.Property(DBTYPE),artist) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,artist)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),artist)</expression>
	<expression name="IsAlbum">String.IsEqual(ListItem.DBTYPE,album) | String.IsEqual(ListItem.Property(DBTYPE),album) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,album)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),album)</expression>
	<expression name="IsSong">String.IsEqual(ListItem.DBTYPE,song) | String.IsEqual(ListItem.Property(DBTYPE),song) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,song)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),song)</expression>
	
	<!-- ArtWork -->
	
	<!-- Games -->
	<expression name="InVideoMode">Window.IsActive(Videos)</expression>
    <expression name="InGameMode">String.Contains(Container.FolderPath,plugin://plugin.program.ael) | String.Contains(Container.FolderPath,plugin://plugin.program.advanced.launcher) | String.Contains(Container.FolderPath,plugin://plugin.program.advanced.emulator.launcher)</expression>
    
    <!-- Game platforms -->
    <expression name="PlatformIsWindows">String.Contains(Container.ListItem(1).Property(platform),Windows)</expression>
    <expression name="PlatformIsDos">String.Contains(Container.ListItem(1).Property(platform),DOS)</expression>
    <expression name="PlatformIsSNES">String.Contains(Container.ListItem(1).Property(platform),SNES)</expression>
    <expression name="PlatformIsNES">String.IsEqual(Container.ListItem(1).Property(platform),Nintendo NES)</expression>
    <expression name="PlatformIsN64">String.Contains(Container.ListItem(1).Property(platform),Nintendo 64)</expression>
    <expression name="PlatformIsNDS">String.Contains(Container.ListItem(1).Property(platform),DS)</expression>
    <expression name="PlatformIsGameboy">String.Contains(Container.ListItem(1).Property(platform),GameBoy)</expression>
    <expression name="PlatformIsSwitch">String.Contains(Container.ListItem(1).Property(platform),Switch)</expression>
    <expression name="PlatformIsPs3">String.Contains(Container.ListItem(1).Property(platform),PlayStation 3)</expression>
    <expression name="PlatformIsPs2">String.Contains(Container.ListItem(1).Property(platform),PlayStation 2)</expression>
    <expression name="PlatformIsPSP">String.Contains(Container.ListItem(1).Property(platform),PlayStation Portable)</expression>
    <expression name="PlatformIsPS1">String.IsEqual(Container.ListItem(1).Property(platform),Sony PlayStation)</expression>
    <expression name="PlatformIsDreamcast">String.Contains(Container.ListItem(1).Property(platform),Dreamcast)</expression>
    <expression name="PlatformIsSaturn">String.Contains(Container.ListItem(1).Property(platform),Saturn)</expression>
    <expression name="PlatformIsMasterSystem">String.Contains(Container.ListItem(1).Property(platform),Master System)</expression>
    <expression name="PlatformIsMegadrive">String.Contains(Container.ListItem(1).Property(platform),Megadrive) | String.Contains(Container.ListItem(1).Property(platform),Genesis)</expression>
    <expression name="PlatformIsGameGear">String.Contains(Container.ListItem(1).Property(platform),Game Gear)</expression>
    <expression name="PlatformIs32x">String.Contains(Container.ListItem(1).Property(platform),32X)</expression>

    <!-- Preferred thumb shapes -->
    <expression name="UsePosterShape">String.IsEqual(Control.GetLabel(5595),poster)</expression>
    <expression name="UseTitanShape">String.IsEqual(Control.GetLabel(5595),titan)</expression>
    <expression name="UseWideShape">String.IsEqual(Control.GetLabel(5595),wide)</expression>
    <expression name="Use3dsShape">String.IsEqual(Control.GetLabel(5595),3ds)</expression>
    <expression name="UseSquareShape">String.IsEqual(Control.GetLabel(5595),square)</expression>
    <expression name="UseSlimShape">String.IsEqual(Control.GetLabel(5595),slim)</expression>
    <expression name="UseBlurayShape">String.IsEqual(Control.GetLabel(5595),bluray)</expression>
    <expression name="UseBannerShape">String.IsEqual(Control.GetLabel(5595),banner)</expression>
    <expression name="UseSteamShape">String.IsEqual(Control.GetLabel(5595),steam)</expression>

</includes>
